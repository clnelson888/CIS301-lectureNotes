HW 10 due tonight
    (no new homework this week)

Exam 3 is Thursday, April 24

Rachel will have an exam review session from 3-5 on Wednesday in DUE 1118

//////////////////////////////

Today:
- finish loop multiplication example
- more with loop invariants
- review for exam 3

//////////////////////////////

finish mult_loop.sc


--> should the test cases/asserts be different?



--> what if the loop condition was "i < y" instead?

//////////////////////////////

More with invariants

//////////////////////////////

Loop invariants.

- Summarize loop progress
- Often describe the relationship between the variables that change
- Used with the negation of loop condition to prove postconditions

//////////////////

Example: sumEvens.sc

--> make table of relationship between loop variables
--> write function contract 
--> write loop invariant 
--> mark what we could list as PREMISES in all places
--> mark what we would need to SHOW in all places 

///////////////////

in-class quiz

///////////////////

Exam 3 review.

--> Covers everything since Exam 2 (including today)
--> Closed notes, closed computers

Topics:
- Predicate logic proofs emphasizing the existential quantifier
- Recursive definitions (functions and sets)
- Proof techniques, including:
    - Mathematical induction
    - Direct (conditional) proofs
    - Contrapositive proofs 
    - Proof by contradiction
    - Proofs on sets
    --> know the formal definition of even/odd numbers
- Programming logic, including:
    - assumes and asserts
    - Subst and Algebra
    - Verifying programs with:
        - Variable assignments/expressions/updates
        - If/else statements
        - Functions (plus recursive functions and calling functions)
        - Loops
    - Function contracts (meaning of preconditions/postconditions)
    - Loop invariants

The exam will NOT involve programs that use modulus or division.


Problems will be similar in format to Homework 7-10.


When doing programming logic:
    - use a proof block to process each variable update
    - use exact assignment statements, previous claims,
        conditions, etc. as premises (using "Old" for previous
        value of variable that just changed)
    - prove exactly the precondition(s) before any function call
    - prove exactly the postcondition(s) before any function return
    - prove loop invariants hold before the loop begins
            and at end of each iteration


Now, we will work through practice exam 3
