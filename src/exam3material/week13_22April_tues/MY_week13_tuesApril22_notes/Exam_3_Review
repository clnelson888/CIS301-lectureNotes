1: Use natural deduction to prove the following sequent: 
( 
 	∃ ((x: T) => ( D(x) ⋀  ¬B(x)) ), 
 	∀ ((x: T) =>  ( ¬B(x) → S(x)) ) 
   
(  	 ∃ ((x: T) =>  S(x) )         ) 
 
Proof( 
 1 ( ∃ ((x: T) =>  ( D(x) ⋀ ¬B(x)))) by Premise,  
 2 ( ∀ ((x: T) =>  ( ¬B(x) → S(x)))) by Premise, 
 
 	//COMPLETE THE PROOF HERE 
    //Use existE on first premise

3 Let ((a: T) => SubProof(
    4 Assume( D(a) ⋀  ¬B(a)) ),     //plug in individual to our Exists statement
    5 ( D(a) ) by AndE1(4) by AndE1(4),
    6 ( !B(a) ) by AndE2(4),
    7 (¬B(x) → S(x)) by AllE[T](2),
    8 (S(a)) by ImplyE(7,6),
    9 (∃ ((x: T) =>  S(x))) by ExistsI[T](8)

    //Goal: ( ∃ ((x: T) =>  S(x)) )
)),

10 (∃ ((x: T) =>  S(x))) by ExistsE[T](1,3)

)

----------------------------------------------------------------------
3. Use a direct proof to prove that if x is an odd integer, then 6x+4 is even.  

Assume x is an odd integer. Then x=2k+1 for some integer k. We have:
    6x+4 = 6(2k+1) + 6
         = 12k + 6 + 4
         = 12k + 10
         = 2(6k + 5)
    
    Thus 6x + 4 = 2b where b is the integer 6k+5, and so 6x + 4 is even.

----------------------------------------------------------------------
4. Consider the following questions about recursive definitions. 
    a.	Consider the pattern 3,8,13,18,23,... Give a recursive definition of the function f(n), 
        where n ∈ ℕ, that defines the pattern. 

            Base Case: f(1) = 3,
            Recursive: f(n) = f(n-1) + 5, n > 1
                                ^ Reference Previous one
 
 
 
 
b.	Give a recursive definition of the function SumOdds(n), where SumOdds(n) is the sum of the first n odd integers.  


            SumOdds(1) = 1
            SumOdds(n) = SumOdds(n-1) + (2n-1), n > 1 
                            ^ Reference previous one

            n = 2, 1 + 3 = 4
            n = 3, 1+3
            n = 4, 1 + 3 + 5 + 7