Homework 1 due tonight
    last problem (Deer/Fox/Bunny) suggestions

    3 cases - Deer, Fox, Bunny being the thief

    Case 1. Suppose Deer is the thief. See who was telling
        truth, who lying. See if matches what you're told.


I'll post Homework 2 after class (due Tues Feb 4)

/////////////////////

Today:

- review implies operator
- evaluating logical statements
- compound truth tables
- using Logika
- parse trees
- begin propositional logic

//////////////////////////////////////////


Review: IMPLIES operator →

"If I have a test, then I will study"

p: I have a test
q: I will study

p → q

When is this true? When is this false?
    False: p happens, q doesn't


p q  #  p → q
--------------
T T  #    T
T F  #    F
F T  #    T
F F  #    T

//////////////////////////////////////

Evaluating logical statements.

Basic operations:

∧ - AND
∨ - OR (inclusive or)
¬ - NOT
→ - IMPLIES

////////////////////////////////////////

Consider ¬p ∨ q ∧ r.

--> what operation do we do first?



Order of operations

In math? 

(), exponents, multiplication/division, addition/subtraction

4 - 2 - 3

mult/div/add/sub - left to right


(4-2)-3



For logic statements (∧ ∨ ¬ →).
From highest (happens first) to lowest (happens last) precedence:

(), ¬, ∧, ∨, →


Given this statement:

    ¬p ∨ q ∧ r




Add () to show the order of operations.

((¬p) ∨ (q ∧ r))




Evaluate the above statement using these
variable assignments:

p is T
q is F
r is F


((¬p) ∨ (q ∧ r))

((¬T) ∨ (F ∧ F))
((F) ∨ (F ∧ F))
(F ∨ F)
F



////////////////////////////////////////////////

Order of operations
    ¬ evaluates right to left
        ¬¬p is equivalent to....¬(¬p)


    ∧ and ∨ evaluate left to right
        p ∧ q ∧ r is equivalent to....(p ∧ q) ∧ r
        p ∨ q ∨ r is equivalent to....(p ∨ q) ∨ r


    → evaluates right to left
        p → q → r is equivalent to....p → (q → r)





//////////////////////////////////////////

Top-level operator (what happens LAST?)
    lowest precedence


¬p ∧ q ∨ r


top-level? OR (∨)


How is this similar to a circuit? the gate that happens last
    its output is the output of the whole circuit



///////////////////////////////

p ∧ q ∨ r ∧ p

rewrite with ():

(p ∧ q) ∨ r ∧ p
(p ∧ q) ∨ (r ∧ p)

top-level operator? OR (∨)



//////////////////////////////

p ∧ q ∧ r ∧ s

rewrite with ():

(p ∧ q) ∧ r ∧ s
((p ∧ q) ∧ r) ∧ s

top-level operator? AND (the rightmost one)


////////////////////////////////////////////////////

In-class practice quiz

////////////////////////////////////////////////////

Listing all truth assignments for a logical statement.



If we have 2 variables, how many possible truth assignments?

    p, q

4

T T 
T F 
F T 
F F



If we have 3 variables, how many possible truth assignments?

    p, q, r

8 (however many values)^(how many variables)

2^3

If we have n variables, how many possible truth assignments?

2^n




////////////////////////////////////////////////////

Classifying logical statements based on truth assignments.



Contingent, contradictory, tautology



contingent - a mix. Some truth assignments make the statement
    true, and some truth assignments make it false.

    Example? p -> q (or any of the basic statements with 
    one operator and two variables)



contradictory - doesn't make any sense. All possible truth
    assignments make the statement false.

    Example? q ^ !q
    every possible truth assignment makes the statement false
        (q = T and q = F)


tautology - something that is always true. Every possible truth
    assignment makes the statement true.

    Example? q -> q
        q = T and q = F both make that statement true
    q V !q

///////////////////////////////////////////

∧ ∨ ¬ →

///////////////////////////////////////////

Compound truth tables.


Write a truth table for:

(p ∧ r) → (r ∨ ¬q)

                  *
-----------------------------
p q r  #  (p ∧ r) → (r ∨ ¬q)
-----------------------------
T T T #      T    T    T F
T T F #      F    T    F F
T F T #      T    T    T T
T F F #      F    T    T T
F T T #      F    T    T F
F T F #      F    T    F F
F F T #      F    T    T T
F F F #      F    T    T T
-----------------------------
Tautology




--> top-level operator?

--> need to evaluate statement on ALL possible truth assignments

--> how many truth assignments are there?

--> how would we classify this truth table?


/////////////////////////////////////////

complete truth table in truth.logika

--> what to type for different operators


AND: &
OR: |
NOT: !
IMPLIES: ->:

alignment matters!

--> order of operations in Logika

//////////////////////////////////////

trees



parse trees

--> what are they?

--> draw one for (p ∧ q) → ¬r

(drew this on board)


--> expression trees



--> draw one for p ∨ q ∧ r → ¬p → ¬q ∨ s



--> how do they relate to programming?

--> what is the "top-level operator" here?


////////////////////////////////////////

<-- stopped here, will continue on Thursday

(will also do the p ∨ q ∧ r → ¬p → ¬q ∨ s
parse tree on Thursday)

////////////////////////////////////////

Propositional logic.


- a set of propositional atoms (statements that can be T/F)
    --> these will be our boolean variables in logic statements



- connected by logical operators



- join together to make new propositions (logical sentences)
    that can be true or false



////////////////////////////////////////

Which ones are propositions?

Today is Thursday.


What time is it?


x == 2


Pigs can fly.


Drive carefully.


y <= 4



////////////////////////////////////////

Suppose we have these propositional atoms:

    p: It is below freezing.

    q: It is snowing.

    r: y <= 4

    s: x == 2


How would we express these as English sentences?

    ¬p:


    p ∧ q:


    p → q :


    ¬p → ¬q:


    r ∨ s:

    ¬r:

////////////////////////

Next time:

- A bit more with translations
- Equivalent propositions
- DeMorgan's laws
- Equivalent if-statements
- Negating if-statements
- Proving equivalence with truth tables
- Satisfiability
