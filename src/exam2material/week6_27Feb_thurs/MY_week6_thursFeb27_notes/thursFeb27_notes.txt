HW 5 is due Tues March 4

////////////////////////////

Today:
- set builder notation
- set operations + Venn diagrams
- quantifiers
- limitations of propositional logic
- begin predicate logic


//////////////////////////////

Reminder: set builder notation

{x : conditions}


{x : x ∈ ℤ, x^2 <= 25}

//////////////////////////////

Describe these sets in set builder notation


{5,10,15}



{CIS 115, CIS 200, CIS 300, CIS 301}



{2,4,8,16,32}


///////////////////////////////////////
∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

///////////////////////////////////////

Set union, ⋃

The union of the sets A and B, written A ⋃ B, is the set
of all elements....?


How could we express in set builder notation?

A ⋃ B =


Show as a Venn diagram.

//////////////////////////////////////
⋃ ⋂ ⋁ ⋀ ∈ ∉
///////////////////////////////////////

Set intersection, ⋂

The intersection of the sets A and B, written A ⋂ B, is the set
of all elements that are...?


How could we express in set builder notation?

A ⋂ B =


Show as a Venn diagram.

///////////////////////////////////////

Set difference,

/ or \ (means the same thing)

The difference between the sets A and B, written A - B, 
    is the set of all elements...?


How could we express in set builder notation?

A - B =


Show as a Venn diagram.

//////////////////////////////////////
⋃ ⋂ ⋁ ⋀ ∈ ∉
///////////////////////////////////////

A = {1,3,7,10,11,12}

B = {2,3,4,5,6,7}


Find:

A ⋃ B = {1,2,3,4,5,6,7,8,10,11,12}

A ⋂ B = {3,7}

A - B = {1,7,10,11,12}

B - A = {2,4,5,6}


/////////////////

Draw a Venn diagram for A ⋃ (B ⋂ C)


Draw a Venn diagram for (A ⋂ B) − C


Draw Venn diagrams for A ⋃ (B ⋂ C) and (A ⋃ B) ⋂ (A ⋃ C)

/////////////////

How does A - B relate to A ⋃ B and A ⋂ B?

A - b = A - A ⋂ B


What do we know if A ⋂ B = A ⋃ B?

    They're Equivilant

What do we know if A - B = A?

    A and B don't overlap:
    A ⋂ B = ∅


What do we know if A - B = B - A?

    Only happens when A = B
    In this case, A - B = B - A = ∅




//////////////////

Subset - A is a subset of B, written A ⊆ B, if
    all elements in A are also in B.

(We say A ⊂ B if A is a subset of B but A ≠ B.)




Example:

A = {1,3,4}

B = {1,3,5,8}

--> is A a subset of B?



A = {8,1,3}

B = {1,3,5,8}

--> is A a subset of B?



//////////////////////////////////

Quantifiers - helps describe all or some elements in a set

    ∀ - universal quantifier, read as "for all"

    ∃ - existential quantifier, read as "there exists"



Can we define that set A is a subset of set B using quantifiers?

A ⊆ B means ...

    ∀ x ∈ A → x ∈ B




How could we define that set A equals set B using quantifiers?

    (∀ x ∈ A → x ∈ B) ⋀ (∀ x ∈ B → x ∈ A)

//////////////////////////////////////

∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

//////////////////////////////////////

(we will come back to sets in a couple of weeks to
do proofs with them)

//////////////////////////////////////

(in-class quiz)

//////////////////////////////////////

A predicate is a boolean function that represents whether
    an individual has a particular property


Set builder notation: {x : P(x)}

where P(x) is a statement (a predicate) involving x




The set is all such x where P(x) is true

//////////////////////////////////////

Example:

A = {x : x ∈ ℕ ⋀ x^2 ≥ 25 }




P(x) = x ∈ ℕ ⋀ x^2 ≥ 25

What are these saying? Are they true?

P(2) = F (not greater than 25)
P(-6) = F (not a natural number)
P(10) = T 

Is 2 in A? Is -6? Is 10?




//////////////////////////////////////

Limitations of propositional logic:

Premises:
    All humans are mortal.
    Socrates is human.

Conclusion
    Therefore, Socrates is mortal.



How would we prove this in propositional logic?

What propositional atoms?

p: All humans are mortal
q: Socrates is human
r: Socrates is mortal


p, q ⊢ r



///////////////

Predicate logic:

Instead of propositions, we will make claims about
individuals in a domain (a set)


These claims will involve predicates and quantifiers



//////////////////

More with predicates.

Example:

    Domain: {x : x is a student at K-State}
    C(x): whether x is in CIS 301

    Bob is taking: CIS 300, ECE 241, MATH 221, ENGL 200
    Jill is taking: CIS 301, MATH 510, HIST 251, MUSIC 170


    What is the value of C(Bob)? False

    What is the value of C(Jill)? True

    What is the value of C(Bob) ⋀ C(Jill)? False

////////////////
∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥
////////////////

Quantifiers and predicates

Domain: {strawberry, blueberry, banana, orange, 
            grapefruit, apple}

Berry(x): x is a berry
Citrus(x): x is a citrus fruit
Peel(x): x has a peel (that needs to be removed before eating)
Seeds(x): x contains inedible seeds
Bite(x): x is bite-sized

Berry(strawberry) -  True
Citrus(strawberry) - False
Peel(strawberry) - False
Seeds(strawberry) - False
Bite(strawberry) - True



Write each statement in English. Is each one true or false?

∀ x (Berry(x))

    All fruits are berries
    (Every fruit is a berry)


    --> how could we express the same statement in our domain
    WITHOUT a quantifier?

    Is false in our domain - a bannana is not a berry

    Berry(strawberry) ^ Berry(Blueberry) ^ ... for all of them


///

∃ x (Citrus(x) ⋀ Seeds(x))

There exists a feuit that is citrus and has inedible seeds

True - orange is citrus and has inedible seeds

    --> how could we express the same statement in our domain
    WITHOUT a quantifier?

(Citrus(strawberry) ^ Seeds(strawberry)) | (Citrus(Orange) ^ Seeds(orange)) | ...


///

∀ x (Berry(x) ⋀ Bite(x))

Every fruit is both a berry and bite sized
All fruits are berries and are bite-sized

(Berry(strawberry) ^ Bite(strawberry)) ^ (Berry(bannana) ^ Bite(bannana)) ^ ...




///

∀ x (Berry(x) → Bite(x))

All berries are bite sized
Everything that is a berry is bit sized

True (only need to consider whether my berries are also bite-sized)



///

¬(∀ x Peel(x))

    Not all fruits have a peel that needs removed.

    ¬(Peel(strawberry) ^ Peel(blueberry) ^ ...)

    True - Strawberry doesn't have a peel tht needs removed


Can you think of another way to write the same thing?

    ¬Peel(strawberry) | ¬Peel(blueberry) | ...

    ∃ x ¬Peel(x)
        There is a fruit that doesn't have a peel that needs removed

///

¬(∀ x (Seeds(x) → Citrus(x)))


Can you think of another way to write the same thing?



///

∀ x ¬Peel(x)




///

¬(∃ x Berry(x))



///

¬(∃ x (Peel(x) ⋀ Citrus(x)))




///

∃ x ¬(Peel(x) ⋀ Seeds(x))




///

∃ x (Citrus(x) → Berry(x))




/////////////////

For all: usually connect with...

There exists: usually connect with...

/////////////////

Next time:
- quantifiers with sets of numbers
- translations involving multiple variables/quantifiers
- DeMorgan's laws for quantifiers
- begin natural deduction in predicate logic